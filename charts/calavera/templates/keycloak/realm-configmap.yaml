apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-realm
data:
  realm.json: |+2
    {
      "id": "calavera",
      "realm": "calavera",
      "displayName": "{{ .Values.keycloak.displayName }}",
      "notBefore": 0,
      "revokeRefreshToken": false,
      "refreshTokenMaxReuse": 0,
      "accessTokenLifespan": 300,
      "accessTokenLifespanForImplicitFlow": 900,
      "ssoSessionIdleTimeout": 1800,
      "ssoSessionMaxLifespan": 36000,
      "ssoSessionIdleTimeoutRememberMe": 0,
      "ssoSessionMaxLifespanRememberMe": 0,
      "offlineSessionIdleTimeout": 2592000,
      "offlineSessionMaxLifespanEnabled": false,
      "offlineSessionMaxLifespan": 5184000,
      "clientSessionIdleTimeout": 0,
      "clientSessionMaxLifespan": 0,
      "clientOfflineSessionIdleTimeout": 0,
      "clientOfflineSessionMaxLifespan": 0,
      "accessCodeLifespan": 60,
      "accessCodeLifespanUserAction": 300,
      "accessCodeLifespanLogin": 1800,
      "actionTokenGeneratedByAdminLifespan": 43200,
      "actionTokenGeneratedByUserLifespan": 300,
      "enabled": true,
      "sslRequired": "external",
      "registrationAllowed": false,
      "registrationEmailAsUsername": false,
      "rememberMe": true,
      "verifyEmail": true,
      "loginWithEmailAllowed": true,
      "duplicateEmailsAllowed": false,
      "resetPasswordAllowed": true,
      "editUsernameAllowed": false,
      "bruteForceProtected": false,
      "permanentLockout": false,
      "maxFailureWaitSeconds": 900,
      "minimumQuickLoginWaitSeconds": 60,
      "waitIncrementSeconds": 60,
      "quickLoginCheckMilliSeconds": 1000,
      "maxDeltaTimeSeconds": 43200,
      "failureFactor": 30,
      "roles": {
        "realm": [
          {
            "id": "a3a8ea1e-1e6b-4be7-adfe-106eec26f1ba",
            "name": "uma_authorization",
            "description": "${role_uma_authorization}",
            "composite": false,
            "clientRole": false,
            "containerId": "calavera",
            "attributes": {}
          },
          {
            "id": "c4a03425-c2d8-42d2-98ad-4cee58cc46c5",
            "name": "offline_access",
            "description": "${role_offline-access}",
            "composite": false,
            "clientRole": false,
            "containerId": "calavera",
            "attributes": {}
          }
        ],
        "client": {
          "realm-management": [
            {
              "id": "9651db0a-c02a-4cd2-85dc-6fe798e3d892",
              "name": "view-events",
              "description": "${role_view-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "b16d3da9-b17d-44ec-af30-a41ee3629633",
              "name": "query-groups",
              "description": "${role_query-groups}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "ea3e8ad7-5489-4d3f-be9f-6a2a3bae0360",
              "name": "manage-users",
              "description": "${role_manage-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "dbb19a39-921d-496b-abd1-2b6d008eb3c0",
              "name": "manage-events",
              "description": "${role_manage-events}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "29420c48-8318-4695-b76d-2e2cafc33fa5",
              "name": "impersonation",
              "description": "${role_impersonation}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "3a0ff9a3-d75d-4051-aba8-a893db4920ae",
              "name": "view-authorization",
              "description": "${role_view-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "86c62521-ffa0-45ec-b8c3-6fc519a1bdef",
              "name": "create-client",
              "description": "${role_create-client}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "205457c3-1536-43a9-9dfc-3dd5d6a6e306",
              "name": "query-users",
              "description": "${role_query-users}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "7bb7a398-4ab2-42f8-a444-dcb39ac25797",
              "name": "realm-admin",
              "description": "${role_realm-admin}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "view-events",
                    "query-groups",
                    "manage-users",
                    "manage-events",
                    "impersonation",
                    "view-authorization",
                    "create-client",
                    "query-users",
                    "manage-identity-providers",
                    "view-clients",
                    "view-realm",
                    "manage-realm",
                    "query-realms",
                    "view-users",
                    "manage-clients",
                    "manage-authorization",
                    "query-clients",
                    "view-identity-providers"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "9d28e021-0e2d-461b-9405-1e30a5e29a8c",
              "name": "manage-identity-providers",
              "description": "${role_manage-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "a671a362-5e52-45db-b3db-ed0ec3d90144",
              "name": "view-clients",
              "description": "${role_view-clients}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-clients"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "9c944271-40d6-4f92-8885-23400f7b6bdd",
              "name": "view-realm",
              "description": "${role_view-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "796e78e3-ae47-4fc6-9cd7-db502995cb22",
              "name": "manage-realm",
              "description": "${role_manage-realm}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "5f43b245-8f85-447a-974b-0ea3a51734b3",
              "name": "query-realms",
              "description": "${role_query-realms}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "f5777e84-f3f8-4c5e-b106-ba65c16ea6db",
              "name": "view-users",
              "description": "${role_view-users}",
              "composite": true,
              "composites": {
                "client": {
                  "realm-management": [
                    "query-groups",
                    "query-users"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "f58edf73-6e02-4a55-80fe-9db99d39264e",
              "name": "manage-clients",
              "description": "${role_manage-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "243555f6-3eef-4e49-8519-a06545e56d9e",
              "name": "manage-authorization",
              "description": "${role_manage-authorization}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "44af588e-eaa1-4b11-af44-3b230080fe8e",
              "name": "query-clients",
              "description": "${role_query-clients}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            },
            {
              "id": "73617553-6b29-4941-b2f7-a3bbd1650567",
              "name": "view-identity-providers",
              "description": "${role_view-identity-providers}",
              "composite": false,
              "clientRole": true,
              "containerId": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
              "attributes": {}
            }
          ],
          "security-admin-console": [],
          "admin-cli": [],
          "account-console": [],
          "broker": [
            {
              "id": "b5e0a69b-120f-4b7c-b44b-997963e54b34",
              "name": "read-token",
              "description": "${role_read-token}",
              "composite": false,
              "clientRole": true,
              "containerId": "056ac8dc-b37e-43f0-94a4-bf961fb1cc0b",
              "attributes": {}
            }
          ],
          "account": [
            {
              "id": "c86ce135-8116-4c10-a7af-a1e0e166d97c",
              "name": "view-consent",
              "description": "${role_view-consent}",
              "composite": false,
              "clientRole": true,
              "containerId": "8057e60d-ca21-4fd8-8c02-d27a84ff6f4e",
              "attributes": {}
            },
            {
              "id": "cb88a4b0-3f6b-4315-92e2-226b19dd152d",
              "name": "manage-account-links",
              "description": "${role_manage-account-links}",
              "composite": false,
              "clientRole": true,
              "containerId": "8057e60d-ca21-4fd8-8c02-d27a84ff6f4e",
              "attributes": {}
            },
            {
              "id": "0c27febc-3397-463f-9e1f-19a9b574326e",
              "name": "manage-account",
              "description": "${role_manage-account}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "manage-account-links"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "8057e60d-ca21-4fd8-8c02-d27a84ff6f4e",
              "attributes": {}
            },
            {
              "id": "a309c7da-bdff-4cc7-a58d-e8c89356df89",
              "name": "view-profile",
              "description": "${role_view-profile}",
              "composite": false,
              "clientRole": true,
              "containerId": "8057e60d-ca21-4fd8-8c02-d27a84ff6f4e",
              "attributes": {}
            },
            {
              "id": "53224b63-ae76-44f3-9cca-0c07ccaa08f0",
              "name": "manage-consent",
              "description": "${role_manage-consent}",
              "composite": true,
              "composites": {
                "client": {
                  "account": [
                    "view-consent"
                  ]
                }
              },
              "clientRole": true,
              "containerId": "8057e60d-ca21-4fd8-8c02-d27a84ff6f4e",
              "attributes": {}
            },
            {
              "id": "6266a715-43e3-4f4d-8d10-869a0784df11",
              "name": "view-applications",
              "description": "${role_view-applications}",
              "composite": false,
              "clientRole": true,
              "containerId": "8057e60d-ca21-4fd8-8c02-d27a84ff6f4e",
              "attributes": {}
            }
          ]
        }
      },
      "groups": [],
      "defaultRoles": [
        "offline_access",
        "uma_authorization"
      ],
      "requiredCredentials": [
        "password"
      ],
      "otpPolicyType": "totp",
      "otpPolicyAlgorithm": "HmacSHA1",
      "otpPolicyInitialCounter": 0,
      "otpPolicyDigits": 6,
      "otpPolicyLookAheadWindow": 1,
      "otpPolicyPeriod": 30,
      "otpSupportedApplications": [
        "FreeOTP",
        "Google Authenticator"
      ],
      "webAuthnPolicyRpEntityName": "keycloak",
      "webAuthnPolicySignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyRpId": "",
      "webAuthnPolicyAttestationConveyancePreference": "not specified",
      "webAuthnPolicyAuthenticatorAttachment": "not specified",
      "webAuthnPolicyRequireResidentKey": "not specified",
      "webAuthnPolicyUserVerificationRequirement": "not specified",
      "webAuthnPolicyCreateTimeout": 0,
      "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyAcceptableAaguids": [],
      "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
      "webAuthnPolicyPasswordlessSignatureAlgorithms": [
        "ES256"
      ],
      "webAuthnPolicyPasswordlessRpId": "",
      "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
      "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
      "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
      "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
      "webAuthnPolicyPasswordlessCreateTimeout": 0,
      "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
      "webAuthnPolicyPasswordlessAcceptableAaguids": [],
      "scopeMappings": [
        {
          "clientScope": "offline_access",
          "roles": [
            "offline_access"
          ]
        }
      ],
      "clientScopeMappings": {
        "account": [
          {
            "client": "account-console",
            "roles": [
              "manage-account"
            ]
          }
        ]
      },
      "clients": [
        {
          "clientId": "{{ .Values.dashboard.clientId }}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "{{ .Values.dashboard.secret }}",
          "redirectUris": [
            "{{ .Values.dashboard.redirectUri }}"
          ],
          "webOrigins": [
            "*"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.assertion.signature": "false",
            "access.token.lifespan": "3600",
            "saml.multivalued.roles": "false",
            "saml.force.post.binding": "false",
            "saml.encrypt": "false",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "client.session.idle.timeout": "1800",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "1d7181a9-4127-4de5-9902-5da3938dd1a1",
              "name": "Client ID",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientId",
                "access.token.claim": "true",
                "claim.name": "clientId",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4b2a11cd-090c-4e38-b169-df6974629aca",
              "name": "Client IP Address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientAddress",
                "access.token.claim": "true",
                "claim.name": "clientAddress",
                "jsonType.label": "String"
              }
            },
            {
              "id": "2881af37-acc8-4f9e-9f0c-e1b48f1ce364",
              "name": "Client Host",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usersessionmodel-note-mapper",
              "consentRequired": false,
              "config": {
                "user.session.note": "clientHost",
                "access.token.claim": "true",
                "claim.name": "clientHost",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {{- if .Values.keycloak.clients.gitea.oauth.enabled }}
        {
          "clientId": "{{ .Values.keycloak.clients.gitea.oauth.id }}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "{{ .Values.keycloak.clients.gitea.oauth.secret }}",
          "redirectUris": [
            "*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "exclude.session.state.from.auth.response": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "display.on.consent.screen": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {{- end }}
        {{- if .Values.keycloak.clients.gitlab.saml.enabled }}
        {
          "clientId": "{{ .Values.keycloak.clients.gitlab.saml.id }}",
          "rootUrl": "https://{{ .Values.keycloak.clients.gitlab.saml.host }}",
          "baseUrl": "/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "{{ .Values.keycloak.clients.gitlab.saml.secret }}",
          "redirectUris": [
            "https://{{ .Values.keycloak.clients.gitlab.saml.host }}/users/auth/saml/callback"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": true,
          "protocol": "saml",
          "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "true",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "saml_assertion_consumer_url_post": "https://{{ .Values.keycloak.clients.gitlab.saml.host }}/users/auth/saml/callback",
            "saml_idp_initiated_sso_url_name": "{{ .Values.keycloak.clients.gitlab.saml.id }}",
            "saml.server.signature": "true",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml.signature.algorithm": "RSA_SHA256",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "true",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "true",
            "display.on.consent.screen": "false",
            "saml_name_id_format": "username",
            "saml.onetimeuse.condition": "false",
            "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "id": "251bfe7c-cd39-4c7b-8ce2-9ae6bd52d507",
              "name": "email",
              "protocol": "saml",
              "protocolMapper": "saml-user-property-mapper",
              "consentRequired": false,
              "config": {
                "attribute.nameformat": "Basic",
                "user.attribute": "Email",
                "friendly.name": "Email",
                "attribute.name": "email"
              }
            },
            {
              "id": "67237963-d7f5-4134-af3b-32c6ab8e5da4",
              "name": "last_name",
              "protocol": "saml",
              "protocolMapper": "saml-user-property-mapper",
              "consentRequired": false,
              "config": {
                "attribute.nameformat": "Basic",
                "user.attribute": "LastName",
                "friendly.name": "Last Name",
                "attribute.name": "last_name"
              }
            },
            {
              "id": "b589eba3-9f0e-4961-b75b-51d9851ee6c2",
              "name": "first_name",
              "protocol": "saml",
              "protocolMapper": "saml-user-property-mapper",
              "consentRequired": false,
              "config": {
                "attribute.nameformat": "Basic",
                "user.attribute": "FirstName",
                "friendly.name": "First Name",
                "attribute.name": "first_name"
              }
            },
            {
              "id": "9558bc62-1ea0-4ce0-89ad-36f72495488c",
              "name": "name",
              "protocol": "saml",
              "protocolMapper": "saml-user-property-mapper",
              "consentRequired": false,
              "config": {
                "attribute.nameformat": "Basic",
                "user.attribute": "Username",
                "friendly.name": "Username",
                "attribute.name": "name"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {{- end }}
        {
          "clientId": "mattermost",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "3e914323–818b-4eq5-a9be-85a1be70b11a",
          "redirectUris": [
            "https://mattermost.calavera.simwak.dev/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "saml.assertion.signature": "false",
            "saml.force.post.binding": "false",
            "saml.multivalued.roles": "false",
            "saml.encrypt": "false",
            "saml.server.signature": "false",
            "saml.server.signature.keyinfo.ext": "false",
            "exclude.session.state.from.auth.response": "false",
            "saml_force_name_id_format": "false",
            "saml.client.signature": "false",
            "tls.client.certificate.bound.access.tokens": "false",
            "saml.authnstatement": "false",
            "display.on.consent.screen": "false",
            "saml.onetimeuse.condition": "false"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": true,
          "nodeReRegistrationTimeout": -1,
          "protocolMappers": [
            {
              "name": "mattermostId",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "mattermostId",
                "id.token.claim": "false",
                "access.token.claim": "false",
                "claim.name": "id",
                "jsonType.label": "long"
              }
            },
            {
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "false",
                "access.token.claim": "false",
                "claim.name": "username",
                "jsonType.label": "String"
              }
            },
            {
              "name": "ldap_mattermostId",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "aggregate.attrs": "false",
                "userinfo.token.claim": "true",
                "user.attribute": "employeeNumber",
                "id.token.claim": "false",
                "access.token.claim": "false",
                "claim.name": "id",
                "jsonType.label": "long"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "8057e60d-ca21-4fd8-8c02-d27a84ff6f4e",
          "clientId": "account",
          "name": "${client_account}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/calavera/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "defaultRoles": [
            "view-profile",
            "manage-account"
          ],
          "redirectUris": [
            "/realms/calavera/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "6ae7b789-2501-43f0-829e-91efa067b1f3",
          "clientId": "account-console",
          "name": "${client_account-console}",
          "rootUrl": "${authBaseUrl}",
          "baseUrl": "/realms/calavera/account/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/realms/calavera/account/*"
          ],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "6a1269dc-9e4a-4c94-a40a-3c3777c51347",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "14af0a74-a565-4214-bd3e-b68a94ed0702",
          "clientId": "admin-cli",
          "name": "${client_admin-cli}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": false,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "056ac8dc-b37e-43f0-94a4-bf961fb1cc0b",
          "clientId": "broker",
          "name": "${client_broker}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "7892f3c0-1931-4ef8-bedd-ccee1e99c97c",
          "clientId": "realm-management",
          "name": "${client_realm-management}",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [],
          "webOrigins": [],
          "notBefore": 0,
          "bearerOnly": true,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": false,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {},
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        },
        {
          "id": "334d720a-14cc-45e0-b1cf-8edfb0e784fe",
          "clientId": "security-admin-console",
          "name": "${client_security-admin-console}",
          "rootUrl": "${authAdminUrl}",
          "baseUrl": "/admin/calavera/console/",
          "surrogateAuthRequired": false,
          "enabled": true,
          "alwaysDisplayInConsole": false,
          "clientAuthenticatorType": "client-secret",
          "secret": "**********",
          "redirectUris": [
            "/admin/calavera/console/*"
          ],
          "webOrigins": [
            "+"
          ],
          "notBefore": 0,
          "bearerOnly": false,
          "consentRequired": false,
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": false,
          "serviceAccountsEnabled": false,
          "publicClient": true,
          "frontchannelLogout": false,
          "protocol": "openid-connect",
          "attributes": {
            "pkce.code.challenge.method": "S256"
          },
          "authenticationFlowBindingOverrides": {},
          "fullScopeAllowed": false,
          "nodeReRegistrationTimeout": 0,
          "protocolMappers": [
            {
              "id": "e436dd8c-a8b0-4ae9-80cf-49d3ce4290e0",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            }
          ],
          "defaultClientScopes": [
            "web-origins",
            "role_list",
            "roles",
            "profile",
            "email"
          ],
          "optionalClientScopes": [
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
          ]
        }
      ],
      "clientScopes": [
        {
          "id": "c48f465b-5fbd-4c89-8296-d02383be28a1",
          "name": "microprofile-jwt",
          "description": "Microprofile - JWT built-in scope",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "false"
          },
          "protocolMappers": [
            {
              "id": "634d744b-5811-4595-86be-3426089892bb",
              "name": "groups",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "user.attribute": "foo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "groups",
                "jsonType.label": "String"
              }
            },
            {
              "id": "442c1ada-b5db-4404-9626-2884fbff9e66",
              "name": "upn",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "upn",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "667b331e-bfc4-4f3f-b0c7-f9865f4653dd",
          "name": "web-origins",
          "description": "OpenID Connect scope for add allowed web origins to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "false",
            "consent.screen.text": ""
          },
          "protocolMappers": [
            {
              "id": "d07a38a9-dad7-4235-bc09-c7c647758cfa",
              "name": "allowed web origins",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-allowed-origins-mapper",
              "consentRequired": false,
              "config": {}
            }
          ]
        },
        {
          "id": "9c277cf5-409e-4c66-9828-dc093bf98760",
          "name": "roles",
          "description": "OpenID Connect scope for add user roles to the access token",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "false",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${rolesScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "28d0468f-8b19-4bd7-9336-6c470d25aa92",
              "name": "audience resolve",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-audience-resolve-mapper",
              "consentRequired": false,
              "config": {}
            },
            {
              "id": "5c8ef518-2fa2-46e6-94da-bba635c9669d",
              "name": "client roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-client-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "resource_access.${client_id}.roles",
                "jsonType.label": "String"
              }
            },
            {
              "id": "a5b79120-f4a9-426d-aa3b-574ca5101a29",
              "name": "realm roles",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-realm-role-mapper",
              "consentRequired": false,
              "config": {
                "multivalued": "true",
                "user.attribute": "foo",
                "access.token.claim": "true",
                "claim.name": "realm_access.roles",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "975b3fdf-091d-48d3-8b0e-c9346cc967c1",
          "name": "phone",
          "description": "OpenID Connect built-in scope: phone",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${phoneScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "e43b5461-42aa-40ee-95b1-ef7cdfaf0d6f",
              "name": "phone number verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumberVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "894efcbe-dadc-4cba-8e5c-22442893ddf0",
              "name": "phone number",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "phoneNumber",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "phone_number",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "6a1f37f2-de83-4a43-9e78-0cbfc0b73196",
          "name": "address",
          "description": "OpenID Connect built-in scope: address",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${addressScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "efe39176-7613-45b1-8e32-e57a6e936be1",
              "name": "address",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-address-mapper",
              "consentRequired": false,
              "config": {
                "user.attribute.formatted": "formatted",
                "user.attribute.country": "country",
                "user.attribute.postal_code": "postal_code",
                "userinfo.token.claim": "true",
                "user.attribute.street": "street",
                "id.token.claim": "true",
                "user.attribute.region": "region",
                "access.token.claim": "true",
                "user.attribute.locality": "locality"
              }
            }
          ]
        },
        {
          "id": "99cb9f6a-f311-4f9d-8ef3-d72e8e11bec2",
          "name": "email",
          "description": "OpenID Connect built-in scope: email",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${emailScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "10e233a8-2e3f-439d-86a6-1a02a621159e",
              "name": "email verified",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "emailVerified",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email_verified",
                "jsonType.label": "boolean"
              }
            },
            {
              "id": "6cacedd8-f70a-4612-909b-a40d79a535a9",
              "name": "email",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "email",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "email",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "c2432117-4bce-436b-9fe9-ad9491763014",
          "name": "profile",
          "description": "OpenID Connect built-in scope: profile",
          "protocol": "openid-connect",
          "attributes": {
            "include.in.token.scope": "true",
            "display.on.consent.screen": "true",
            "consent.screen.text": "${profileScopeConsentText}"
          },
          "protocolMappers": [
            {
              "id": "bb965cce-1afe-42fc-b999-08a5fc37ef49",
              "name": "updated at",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "updatedAt",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "updated_at",
                "jsonType.label": "String"
              }
            },
            {
              "id": "a597c5ce-788f-49c2-a6ca-53a2971413a1",
              "name": "locale",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "locale",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "locale",
                "jsonType.label": "String"
              }
            },
            {
              "id": "68bc77f5-034b-4881-a4d8-abc6f65109b1",
              "name": "given name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "firstName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "given_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "78366241-145c-464a-b4a1-a81c70d4e018",
              "name": "nickname",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "nickname",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "nickname",
                "jsonType.label": "String"
              }
            },
            {
              "id": "431f1f9b-a996-445a-a843-65d370d9d8f4",
              "name": "middle name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "middleName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "middle_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "7007a691-c4f4-4e95-a87b-124606dc13ad",
              "name": "website",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "website",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "website",
                "jsonType.label": "String"
              }
            },
            {
              "id": "83dfb09e-3837-4889-95bb-b14a6b664a63",
              "name": "zoneinfo",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "zoneinfo",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "zoneinfo",
                "jsonType.label": "String"
              }
            },
            {
              "id": "836e69f1-be25-473d-b5f6-772db5c13f72",
              "name": "full name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-full-name-mapper",
              "consentRequired": false,
              "config": {
                "id.token.claim": "true",
                "access.token.claim": "true",
                "userinfo.token.claim": "true"
              }
            },
            {
              "id": "03f0ad5b-462f-49c1-9da3-9142cf5a23a1",
              "name": "username",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "username",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "preferred_username",
                "jsonType.label": "String"
              }
            },
            {
              "id": "5f2ff003-549e-4e6d-a744-f0b42801c1fd",
              "name": "birthdate",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "birthdate",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "birthdate",
                "jsonType.label": "String"
              }
            },
            {
              "id": "4f1ca0da-08ac-4794-8328-05663c6fae62",
              "name": "family name",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-property-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "lastName",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "family_name",
                "jsonType.label": "String"
              }
            },
            {
              "id": "d7dec87c-4c7b-4ef4-afe8-2d09a7d8a3f1",
              "name": "profile",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "profile",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "profile",
                "jsonType.label": "String"
              }
            },
            {
              "id": "e80155d3-5978-4850-904f-75a37d50ff59",
              "name": "gender",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "gender",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "gender",
                "jsonType.label": "String"
              }
            },
            {
              "id": "b384fe3e-00e6-485e-8d90-89084f5019d6",
              "name": "picture",
              "protocol": "openid-connect",
              "protocolMapper": "oidc-usermodel-attribute-mapper",
              "consentRequired": false,
              "config": {
                "userinfo.token.claim": "true",
                "user.attribute": "picture",
                "id.token.claim": "true",
                "access.token.claim": "true",
                "claim.name": "picture",
                "jsonType.label": "String"
              }
            }
          ]
        },
        {
          "id": "292f284c-195b-47a0-8116-800ce46397f1",
          "name": "role_list",
          "description": "SAML role list",
          "protocol": "saml",
          "attributes": {
            "consent.screen.text": "${samlRoleListScopeConsentText}",
            "display.on.consent.screen": "true"
          },
          "protocolMappers": [
            {
              "id": "f160bf44-7314-4b7a-a34a-e563103ecdba",
              "name": "role list",
              "protocol": "saml",
              "protocolMapper": "saml-role-list-mapper",
              "consentRequired": false,
              "config": {
                "single": "false",
                "attribute.nameformat": "Basic",
                "attribute.name": "Role"
              }
            }
          ]
        },
        {
          "id": "bda4f0fb-c706-4dbd-871a-fc0291bb5a5d",
          "name": "offline_access",
          "description": "OpenID Connect built-in scope: offline_access",
          "protocol": "openid-connect",
          "attributes": {
            "consent.screen.text": "${offlineAccessScopeConsentText}",
            "display.on.consent.screen": "true"
          }
        }
      ],
      "defaultDefaultClientScopes": [
        "role_list",
        "profile",
        "email",
        "roles",
        "web-origins"
      ],
      "defaultOptionalClientScopes": [
        "offline_access",
        "address",
        "phone",
        "microprofile-jwt"
      ],
      "browserSecurityHeaders": {
        "contentSecurityPolicyReportOnly": "",
        "xContentTypeOptions": "nosniff",
        "xRobotsTag": "none",
        "xFrameOptions": "SAMEORIGIN",
        "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
        "xXSSProtection": "1; mode=block",
        "strictTransportSecurity": "max-age=31536000; includeSubDomains"
      },
      "smtpServer": {
        "password": "{{ .Values.keycloak.smtp.password }}",
        "replyToDisplayName": "{{ .Values.keycloak.smtp.replyToDisplayName }}",
        "starttls": "{{ .Values.keycloak.smtp.starttls }}",
        "auth": "{{ .Values.keycloak.smtp.auth }}",
        "port": "{{ .Values.keycloak.smtp.port }}",
        "host": "{{ .Values.keycloak.smtp.host }}",
        "from": "{{ .Values.keycloak.smtp.from }}",
        "fromDisplayName": "{{ .Values.keycloak.smtp.fromDisplayName }}",
        "ssl": "{{ .Values.keycloak.smtp.ssl }}",
        "user": "{{ .Values.keycloak.smtp.user }}"
      },
      "eventsEnabled": false,
      "eventsListeners": [
        "jboss-logging"
      ],
      "enabledEventTypes": [],
      "adminEventsEnabled": false,
      "adminEventsDetailsEnabled": false,
      "components": {
        "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
          {
            "id": "bd1f06bb-58cd-43e1-b271-0e0bab29fb45",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-usermodel-attribute-mapper",
                "oidc-sha256-pairwise-sub-mapper",
                "saml-user-property-mapper",
                "oidc-address-mapper",
                "saml-role-list-mapper",
                "saml-user-attribute-mapper",
                "oidc-full-name-mapper",
                "oidc-usermodel-property-mapper"
              ]
            }
          },
          {
            "id": "4424ab9a-2c7a-4f29-9709-07ba5bd48432",
            "name": "Full Scope Disabled",
            "providerId": "scope",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "d5edf6dc-0b19-40e2-a635-0f40959a6274",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "12feb691-042e-4ea5-bece-4f46328f085f",
            "name": "Consent Required",
            "providerId": "consent-required",
            "subType": "anonymous",
            "subComponents": {},
            "config": {}
          },
          {
            "id": "a2a812ad-67f4-4bec-94a9-ad102b4de2fb",
            "name": "Allowed Client Scopes",
            "providerId": "allowed-client-templates",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "allow-default-scopes": [
                "true"
              ]
            }
          },
          {
            "id": "76672f3c-3b2a-4c13-877b-8f8f3b21e5ca",
            "name": "Max Clients Limit",
            "providerId": "max-clients",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "max-clients": [
                "200"
              ]
            }
          },
          {
            "id": "98b3effa-e37f-4d53-9984-c2c3fd54fbed",
            "name": "Trusted Hosts",
            "providerId": "trusted-hosts",
            "subType": "anonymous",
            "subComponents": {},
            "config": {
              "host-sending-registration-request-must-match": [
                "true"
              ],
              "client-uris-must-match": [
                "true"
              ]
            }
          },
          {
            "id": "3c7515a3-55b0-42b8-8d6b-6efd9963ee0c",
            "name": "Allowed Protocol Mapper Types",
            "providerId": "allowed-protocol-mappers",
            "subType": "authenticated",
            "subComponents": {},
            "config": {
              "allowed-protocol-mapper-types": [
                "oidc-usermodel-attribute-mapper",
                "oidc-address-mapper",
                "saml-role-list-mapper",
                "saml-user-property-mapper",
                "oidc-full-name-mapper",
                "oidc-usermodel-property-mapper",
                "saml-user-attribute-mapper",
                "oidc-sha256-pairwise-sub-mapper"
              ]
            }
          }
        ],
        "org.keycloak.storage.UserStorageProvider": [
          {
            "id": "0cec4642-36e5-4f8c-b12d-619d8fd706fc",
            "name": "ldap",
            "providerId": "ldap",
            "subComponents": {
              "org.keycloak.storage.ldap.mappers.LDAPStorageMapper": [
                {
                  "id": "4ed606b5-f4f2-4201-9b57-89ddcb5b1643",
                  "name": "username",
                  "providerId": "user-attribute-ldap-mapper",
                  "subComponents": {},
                  "config": {
                    "ldap.attribute": [
                      "uid"
                    ],
                    "is.mandatory.in.ldap": [
                      "true"
                    ],
                    "read.only": [
                      "false"
                    ],
                    "always.read.value.from.ldap": [
                      "false"
                    ],
                    "user.model.attribute": [
                      "username"
                    ]
                  }
                },
                {
                  "id": "055c4e13-037c-47e6-b6a0-4805106dc076",
                  "name": "email",
                  "providerId": "user-attribute-ldap-mapper",
                  "subComponents": {},
                  "config": {
                    "ldap.attribute": [
                      "mail"
                    ],
                    "is.mandatory.in.ldap": [
                      "false"
                    ],
                    "read.only": [
                      "false"
                    ],
                    "always.read.value.from.ldap": [
                      "false"
                    ],
                    "user.model.attribute": [
                      "email"
                    ]
                  }
                },
                {
                  "id": "4b6830a4-a540-4383-88ce-020cafd6f38f",
                  "name": "last name",
                  "providerId": "user-attribute-ldap-mapper",
                  "subComponents": {},
                  "config": {
                    "ldap.attribute": [
                      "sn"
                    ],
                    "is.mandatory.in.ldap": [
                      "true"
                    ],
                    "always.read.value.from.ldap": [
                      "true"
                    ],
                    "read.only": [
                      "false"
                    ],
                    "user.model.attribute": [
                      "lastName"
                    ]
                  }
                },
                {
                  "id": "bc9818a1-5c9e-44b7-b5d3-95c1f020ccea",
                  "name": "first name",
                  "providerId": "user-attribute-ldap-mapper",
                  "subComponents": {},
                  "config": {
                    "ldap.attribute": [
                      "cn"
                    ],
                    "is.mandatory.in.ldap": [
                      "true"
                    ],
                    "read.only": [
                      "false"
                    ],
                    "always.read.value.from.ldap": [
                      "true"
                    ],
                    "user.model.attribute": [
                      "firstName"
                    ]
                  }
                },
                {
                  "id": "c82e03a8-f6d4-4859-86fb-74401170abf4",
                  "name": "role-ldap-mapper",
                  "providerId": "role-ldap-mapper",
                  "subComponents": {},
                  "config": {
                    "mode": [
                      "LDAP_ONLY"
                    ],
                    "membership.attribute.type": [
                      "DN"
                    ],
                    "roles.dn": [
                      "ou=groups,dc=calavera"
                    ],
                    "user.roles.retrieve.strategy": [
                      "LOAD_ROLES_BY_MEMBER_ATTRIBUTE"
                    ],
                    "membership.user.ldap.attribute": [
                      "uid"
                    ],
                    "membership.ldap.attribute": [
                      "uniqueMember"
                    ],
                    "role.name.ldap.attribute": [
                      "cn"
                    ],
                    "memberof.ldap.attribute": [
                      "memberOf"
                    ],
                    "use.realm.roles.mapping": [
                      "true"
                    ],
                    "client.id": [
                      "dashboard"
                    ],
                    "role.object.classes": [
                      "groupOfUniqueNames"
                    ]
                  }
                },
                {
                  "id": "b154dbe6-4637-4dd5-bae8-5ee0780a0367",
                  "name": "creation date",
                  "providerId": "user-attribute-ldap-mapper",
                  "subComponents": {},
                  "config": {
                    "ldap.attribute": [
                      "createTimestamp"
                    ],
                    "is.mandatory.in.ldap": [
                      "false"
                    ],
                    "always.read.value.from.ldap": [
                      "true"
                    ],
                    "read.only": [
                      "true"
                    ],
                    "user.model.attribute": [
                      "createTimestamp"
                    ]
                  }
                },
                {
                  "id": "748d5c76-811e-4475-a153-c7ab7d002e2d",
                  "name": "modify date",
                  "providerId": "user-attribute-ldap-mapper",
                  "subComponents": {},
                  "config": {
                    "ldap.attribute": [
                      "modifyTimestamp"
                    ],
                    "is.mandatory.in.ldap": [
                      "false"
                    ],
                    "read.only": [
                      "true"
                    ],
                    "always.read.value.from.ldap": [
                      "true"
                    ],
                    "user.model.attribute": [
                      "modifyTimestamp"
                    ]
                  }
                },
                {
                  "id": "fe765f30-beec-4830-85cc-a74375f80942",
                  "name": "employeeNumber",
                  "providerId": "user-attribute-ldap-mapper",
                  "subComponents": {},
                  "config": {
                    "ldap.attribute": [
                      "employeeNumber"
                    ],
                    "is.mandatory.in.ldap": [
                      "true"
                    ],
                    "is.binary.attribute": [
                      "false"
                    ],
                    "read.only": [
                      "false"
                    ],
                    "always.read.value.from.ldap": [
                      "true"
                    ],
                    "user.model.attribute": [
                      "employeeNumber"
                    ]
                  }
                }
              ]
            },
            "config": {
              "pagination": [
                "true"
              ],
              "fullSyncPeriod": [
                "30"
              ],
              "usersDn": [
                "{{ .Values.keycloak.ldap.usersDn }}"
              ],
              "connectionPooling": [
                "true"
              ],
              "cachePolicy": [
                "DEFAULT"
              ],
              "useKerberosForPasswordAuthentication": [
                "false"
              ],
              "importEnabled": [
                "true"
              ],
              "enabled": [
                "true"
              ],
              "bindDn": [
                "{{ .Values.keycloak.ldap.bindDn }}"
              ],
              "bindCredential": [
                "{{ .Values.keycloak.ldap.bindCredential }}"
              ],
              "changedSyncPeriod": [
                "5"
              ],
              "usernameLDAPAttribute": [
                "uid"
              ],
              "lastSync": [
                "1598798995"
              ],
              "vendor": [
                "other"
              ],
              "uuidLDAPAttribute": [
                "entryUUID"
              ],
              "connectionUrl": [
                "{{ .Values.keycloak.ldap.connectionUrl }}"
              ],
              "allowKerberosAuthentication": [
                "false"
              ],
              "syncRegistrations": [
                "true"
              ],
              "authType": [
                "simple"
              ],
              "debug": [
                "false"
              ],
              "searchScope": [
                "1"
              ],
              "useTruststoreSpi": [
                "ldapsOnly"
              ],
              "trustEmail": [
                "true"
              ],
              "priority": [
                "0"
              ],
              "userObjectClasses": [
                "inetOrgPerson, organizationalPerson"
              ],
              "rdnLDAPAttribute": [
                "uid"
              ],
              "editMode": [
                "WRITABLE"
              ],
              "validatePasswordPolicy": [
                "false"
              ],
              "batchSizeForSync": [
                "1000"
              ]
            }
          }
        ],
        "org.keycloak.keys.KeyProvider": [
          {
            "name": "rsa",
            "providerId": "rsa",
            "subComponents": {},
            "config": {
              "certificate":  [ "{{ .Values.keycloak.rsa.certificate }}" ], 
              "privateKey":  [ "{{ .Values.keycloak.rsa.privateKey }}" ], 
              "keySize": [
                "2048"
              ],
              "active": [
                "true"
              ],
              "priority": [
                "100"
              ],
              "enabled": [
                "true"
              ],
              "algorithm": [
                "RS256"
              ]
            }
          },
          {
            "id": "3336c62c-af7b-447d-86d4-0ef0b9e66b31",
            "name": "aes-generated",
            "providerId": "aes-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ]
            }
          },
          {
            "id": "e3ca5452-f03d-422e-bb9b-370ea787c702",
            "name": "hmac-generated",
            "providerId": "hmac-generated",
            "subComponents": {},
            "config": {
              "priority": [
                "100"
              ],
              "algorithm": [
                "HS256"
              ]
            }
          }
        ]
      },
      "internationalizationEnabled": false,
      "supportedLocales": [],
      "authenticationFlows": [
        {
          "id": "9ba1c907-dead-47ba-bd7a-081c02d3b2f3",
          "alias": "Account verification options",
          "description": "Method with which to verity the existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-email-verification",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "flowAlias": "Verify Existing Account by Re-authentication",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "a3378ca0-0ca4-4c63-8696-386ee5f3cead",
          "alias": "Authentication Options",
          "description": "Authentication options.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "basic-auth",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "basic-auth-otp",
              "requirement": "DISABLED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-spnego",
              "requirement": "DISABLED",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "04abd1a2-c2b2-487e-81cf-1cf0947de634",
          "alias": "Browser - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-otp-form",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "bb542523-4408-42ce-986d-fd3cfe8d9ac1",
          "alias": "Direct Grant - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "direct-grant-validate-otp",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "82f3e1ac-7cc7-4ff4-8d98-7b122e4cad4a",
          "alias": "First broker login - Conditional OTP",
          "description": "Flow to determine if the OTP is required for the authentication",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-otp-form",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "7efe769c-9e26-43ca-9cef-286edfc8f544",
          "alias": "Handle Existing Account",
          "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-confirm-link",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "Account verification options",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "b8904fe3-a773-4074-b7ff-be76b34d682d",
          "alias": "Reset - Conditional OTP",
          "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "conditional-user-configured",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-otp",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "2afc04a5-0e3f-4fb3-99ac-cb9d14e56bc7",
          "alias": "User creation or linking",
          "description": "Flow for the existing/non-existing user alternatives",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "create unique user config",
              "authenticator": "idp-create-user-if-unique",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "flowAlias": "Handle Existing Account",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "16a2147c-8346-4c80-9959-1669ae26bfb6",
          "alias": "Verify Existing Account by Re-authentication",
          "description": "Reauthentication of existing account",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "idp-username-password-form",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "CONDITIONAL",
              "priority": 20,
              "flowAlias": "First broker login - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "ef1bdb50-d3bf-4301-a743-fb7775a51647",
          "alias": "browser",
          "description": "browser based authentication",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-cookie",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "auth-spnego",
              "requirement": "DISABLED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "identity-provider-redirector",
              "requirement": "ALTERNATIVE",
              "priority": 25,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "flowAlias": "forms",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "509b0faa-09cc-43ba-808d-38a82b34e2f3",
          "alias": "clients",
          "description": "Base authentication for clients",
          "providerId": "client-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "client-secret",
              "requirement": "ALTERNATIVE",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-jwt",
              "requirement": "ALTERNATIVE",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-secret-jwt",
              "requirement": "ALTERNATIVE",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "client-x509",
              "requirement": "ALTERNATIVE",
              "priority": 40,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "d5702d1e-343b-4d3a-8fe2-0e228d32a929",
          "alias": "direct grant",
          "description": "OpenID Connect Resource Owner Grant",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "direct-grant-validate-username",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "direct-grant-validate-password",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "CONDITIONAL",
              "priority": 30,
              "flowAlias": "Direct Grant - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "0d9c6217-e1e2-4ea6-8416-3a45dbe65911",
          "alias": "docker auth",
          "description": "Used by Docker clients to authenticate against the IDP",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "docker-http-basic-authenticator",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "26c087c4-9085-4ae5-a2e8-d5a7d798d1d1",
          "alias": "first broker login",
          "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticatorConfig": "review profile config",
              "authenticator": "idp-review-profile",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "User creation or linking",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "e91364d6-feee-4f91-8fb1-5d05a77fd96e",
          "alias": "forms",
          "description": "Username, password, otp and other auth forms.",
          "providerId": "basic-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "auth-username-password-form",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "CONDITIONAL",
              "priority": 20,
              "flowAlias": "Browser - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "9b7886c5-46be-4c67-8acd-1f25392c801c",
          "alias": "http challenge",
          "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "no-cookie-redirect",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "REQUIRED",
              "priority": 20,
              "flowAlias": "Authentication Options",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "601fef53-a7f2-415b-9dbd-6ee4d66d4c7f",
          "alias": "registration",
          "description": "registration flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-page-form",
              "requirement": "REQUIRED",
              "priority": 10,
              "flowAlias": "registration form",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "45143004-5867-4381-9494-5f80b6ceff37",
          "alias": "registration form",
          "description": "registration form",
          "providerId": "form-flow",
          "topLevel": false,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "registration-user-creation",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-profile-action",
              "requirement": "REQUIRED",
              "priority": 40,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-password-action",
              "requirement": "REQUIRED",
              "priority": 50,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "registration-recaptcha-action",
              "requirement": "DISABLED",
              "priority": 60,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        },
        {
          "id": "fb41bab2-abbf-4cf2-869c-8fa53bd29459",
          "alias": "reset credentials",
          "description": "Reset credentials for a user if they forgot their password or something",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "reset-credentials-choose-user",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-credential-email",
              "requirement": "REQUIRED",
              "priority": 20,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "authenticator": "reset-password",
              "requirement": "REQUIRED",
              "priority": 30,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            },
            {
              "requirement": "CONDITIONAL",
              "priority": 40,
              "flowAlias": "Reset - Conditional OTP",
              "userSetupAllowed": false,
              "autheticatorFlow": true
            }
          ]
        },
        {
          "id": "c351619e-1111-4e96-9f91-efeb6e6ee748",
          "alias": "saml ecp",
          "description": "SAML ECP Profile Authentication Flow",
          "providerId": "basic-flow",
          "topLevel": true,
          "builtIn": true,
          "authenticationExecutions": [
            {
              "authenticator": "http-basic-authenticator",
              "requirement": "REQUIRED",
              "priority": 10,
              "userSetupAllowed": false,
              "autheticatorFlow": false
            }
          ]
        }
      ],
      "authenticatorConfig": [
        {
          "id": "64ef2a0c-8657-45a7-a9f1-2e4fcc4dee7d",
          "alias": "create unique user config",
          "config": {
            "require.password.update.after.registration": "false"
          }
        },
        {
          "id": "3e71e4b3-f868-4c27-8251-c951a90ddca3",
          "alias": "review profile config",
          "config": {
            "update.profile.on.first.login": "missing"
          }
        }
      ],
      "requiredActions": [
        {
          "alias": "CONFIGURE_TOTP",
          "name": "Configure OTP",
          "providerId": "CONFIGURE_TOTP",
          "enabled": true,
          "defaultAction": false,
          "priority": 10,
          "config": {}
        },
        {
          "alias": "terms_and_conditions",
          "name": "Terms and Conditions",
          "providerId": "terms_and_conditions",
          "enabled": false,
          "defaultAction": false,
          "priority": 20,
          "config": {}
        },
        {
          "alias": "UPDATE_PASSWORD",
          "name": "Update Password",
          "providerId": "UPDATE_PASSWORD",
          "enabled": true,
          "defaultAction": false,
          "priority": 30,
          "config": {}
        },
        {
          "alias": "UPDATE_PROFILE",
          "name": "Update Profile",
          "providerId": "UPDATE_PROFILE",
          "enabled": true,
          "defaultAction": false,
          "priority": 40,
          "config": {}
        },
        {
          "alias": "VERIFY_EMAIL",
          "name": "Verify Email",
          "providerId": "VERIFY_EMAIL",
          "enabled": true,
          "defaultAction": false,
          "priority": 50,
          "config": {}
        },
        {
          "alias": "update_user_locale",
          "name": "Update User Locale",
          "providerId": "update_user_locale",
          "enabled": true,
          "defaultAction": false,
          "priority": 1000,
          "config": {}
        }
      ],
      "browserFlow": "browser",
      "registrationFlow": "registration",
      "directGrantFlow": "direct grant",
      "resetCredentialsFlow": "reset credentials",
      "clientAuthenticationFlow": "clients",
      "dockerAuthenticationFlow": "docker auth",
      "attributes": {
        "clientOfflineSessionMaxLifespan": "0",
        "clientSessionIdleTimeout": "0",
        "clientSessionMaxLifespan": "0",
        "clientOfflineSessionIdleTimeout": "0"
      },
      "keycloakVersion": "11.0.1",
      "userManagedAccessAllowed": false
    }